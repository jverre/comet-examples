name: test-examples
on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  test-notebooks:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest]
        python-version: [3.9]
        notebooks:
          - guides/get-started/Comet_Quickstart.ipynb
          - guides/manage_data/A_Guide_to_Remote_Artifacts.ipynb
          - guides/manage_data/Introduction_to_Artifacts.ipynb
          - integrations/model-training/hugging_face/notebooks/Comet_with_Hugging_Face_Trainer.ipynb
          - integrations/model-training/pytorch-lightning/notebooks/Comet_and_Pytorch_Lightning.ipynb
          - integrations/model-training/pytorch/notebooks/Comet_and_Pytorch.ipynb
          - integrations/model-training/yolov5/notebooks/Comet_and_YOLOv5.ipynb
          - integrations/workflow-orchestration/metaflow/notebooks/metaflow_hello_world.ipynb
    env:
      NOTEBOOK_TO_TEST: ${{ matrix.notebooks }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U ipython nbconvert
      - name: Debug installed dependencies
        run: |
          python -m pip list
      - name: Test notebook
        run: |
          directory=$(dirname -- "${NOTEBOOK_TO_TEST}")
          notebook=$(basename -- "${NOTEBOOK_TO_TEST}")
          cd "$directory" || exit
          ipython "$notebook"
        env:
          COMET_API_KEY: ${{ secrets.COMET_API_KEY }}
          # COMET_WORKSPACE: cometexamples-tests
  test-scripts:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        example:
          - {directory: "integrations/model-training/pytorch/pytorch-mnist/", command: "python pytorch-mnist-example.py", arg: ""}
          - {directory: "integrations/model-training/pytorch/pytorch-rich-logging/", command: "python pytorch-rich-logging-example.py", arg: ""}
          - {directory: "integrations/workflow-orchestration/metaflow/metaflow-hello-world/", command: "python helloworld.py", arg: "run"}
          - {directory: "integrations/workflow-orchestration/metaflow/metaflow-regression/", command: "python metaflow-regression-example.py", arg: "run"}
          - {directory: "integrations/model-training/spacy/", command: "python -m spacy project run preprocess && python -m spacy project run train", arg: ""}
    env:
      SCRIPT_DIRECTORY: ${{ matrix.example.directory }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r "${SCRIPT_DIRECTORY}"/requirements.txt
      - name: Test examples
        run: |
          cd "${SCRIPT_DIRECTORY}" || exit
          ${{ matrix.example.command }} ${{ matrix.example.arg }}
        env:
          COMET_API_KEY: ${{ secrets.COMET_API_KEY }}
          # COMET_WORKSPACE: cometexamples-tests
